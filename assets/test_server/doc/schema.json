{
    "openapi": "3.0.1",
    "info": {
        "title": "User CRUD",
        "description": "This is a sample server with CRUD for user.",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "url": "www.github.com/pawelWritesCode"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    },
    "servers": [
        {
            "url": "http://localhost:1234"
        }
    ],
    "tags": [
        {
            "name": "user",
            "description": "Operations about user"
        }
    ],
    "paths": {
        "/users": {
            "post": {
                "tags": [
                    "user"
                ],
                "summary": "Create user",
                "description": "Creation of new user.",
                "operationId": "create_user",
                "requestBody": {
                    "description": "Created user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/POSTUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully created user",
                        "content": {
                            "content": {
                                "schema": {
                                    "$ref": "#/components/schemas/GETUser"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/general_error"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by user name",
                "operationId": "get_users_list",
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/GETUser"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{userId}": {
            "get": {
                "tags": [
                    "user"
                ],
                "summary": "Get user by user name",
                "operationId": "get_user",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Id of user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GETUser"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "user of given userId not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/general_error"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "user"
                ],
                "summary": "Replace user",
                "description": "Replace user",
                "operationId": "replace_user",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Id of user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Updated user object",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/POSTUser"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successfully replaced user",
                        "content": {}
                    },
                    "400": {
                        "description": "Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/general_error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "description": "Delete user by id",
                "operationId": "delete_user",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Id of user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User removed",
                        "content": {}
                    },
                    "400": {
                        "description": "error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/general_error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{userId}/avatar": {
            "post": {
                "tags": ["user"],
                "summary": "Send avatar for user",
                "operationId": "post_avatar",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "Id of user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "multipart/form-data": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "my-photo.png"
                                    },
                                    "avatar": {
                                        "type": "string",
                                        "format": "binary"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "successfully added avatar"
                    },
                    "400": {
                        "description": "bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/general_error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "user of given userId was not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/general_error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/general_error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "GETUser": {
                "$ref": "./schema/user/user.json"
            },
            "POSTUser": {
                "$ref": "./schema/user/post_user.json"
            },
            "general_error": {
                "$ref": "./schema/general_error.json"
            }
        }
    }
}